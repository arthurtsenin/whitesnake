import { CaseDataType } from "../types";

import getCovered from "&/images/cases/healthInsurance/getCovered.webp";
import notes from "&/images/cases/healthInsurance/notes.webp";
import subscriptionProcessing from "&/images/cases/healthInsurance/subscriptionProcessing.webp";

export const INSURANCE_DATA: CaseDataType = {
  hero: {
    title: "Платформа медицинского страхования",
    subtitle:
      "Данная платформа для медицинского страхования — это инновационная система, предоставляющая медицинские услуги. Платформа работает в соответствии с индивидуальными предпочтениями пользователя, при этом способна быстро адаптироваться к меняющимся потребностям клиентов. Система представляет собой гибкий, технологичный и современный подход к здравоохранению.",
    keywords: [
      "Медицинское страхование",
      "Здравоохранение",
      "Страхование",
      "Backend разработка",
      "Fullstack разработка",
      "Python",
      "Go",
      "React",
    ],
  },

  customer_title: "Клиент",
  customer_stats: {
    направление: "Здравоохранение, страхование",
    страна: "США",
    "дата старта": "2021",
  },
  customer_info: [
    "Компания-новатор в области медицинского страхования стремится произвести революцию в данной отрасли и ставит своих клиентов на первое место.",
    "Они считают, что каждый американец должен иметь доступ к недорогому и высококачественному медицинскому обслуживанию, вне зависимости от возраста или состояния здоровья.",
    "Подробная информация о клиенте не может быть предоставлена вследствие подписания NDA.",
  ],

  challenge_title: "Задача",
  challenge_info: [
    "Основная задача состояла в разработке комплексной и эффективной системы обработки подписок для платформы медицинского страхования. Эта система должна быть надежной, масштабируемой и достаточно устойчивой, чтобы обрабатывать большой поток данных, оставаясь при этом гибкой для будущего расширения.",
    "Кроме того, нам пришлось столкнуться с небольшой, но важной задачей. Нам было необходимо осуществить переход от Thrift к gRPC во всех сервисах. Также одной из сложностей стало создание библиотеки функций для облегчения взаимодействия между службами. Эта миграция была необходима для повышения производительности, улучшения масштабируемости и придания платформе большей адаптивности к будущим интеграциям и обновлениям. Задача заключалась не только в успешной миграции, но и в обеспечении бесперебойной работы и связи между службами после миграции.",
  ],

  solution_title: "Решение",
  solution_info: {
    items: [
      {
        id: 1,
        text: [
          "Основная цель проекта заключалась в том, чтобы служба обработки подписок удовлетворяла определенным требованиям. Для этого было необходимо спроектировать и построить комплексную backend-систему, которая способна эффективно управлять сложными рабочими процессами и многочисленными пользовательскими сценариями.",

          "Мы разработали сложную систему на Python, которая осуществляет полный жизненный цикл подписок: от первоначальной регистрации пользователя до обработки платежей и продления, прекращения или изменения подписки. Мы разработали серверы, которые позволяют обрабатывать большие объемы транзакций, при этом поддерживают высокий уровень производительности.",
        ],
        image: subscriptionProcessing,
      },
      {
        id: 2,
        text: [
          "Ключевым при решении задачи стало обеспечение гибкости в управлении различными тарифными планами. Разработанный нами сервис может легко адаптироваться ко всем вариантам подписки, различным срокам оплаты и пользовательским возможностям. При этом система обеспечивает адаптивность как для клиентов, так и для компании.",

          "Также было необходимо обеспечить возможность сервиса управлять частными случаями и проблемами, такими как сбои платежей, механизмы повторных попыток, уведомления и паузы в подписке. Эти компоненты были тщательно разработаны, чтобы свести к минимуму сбои в работе и обеспечить клиентов беспроблемным пользованием платформой.",

          "Наконец, мы упростили интеграцию с несколькими платежными шлюзами и предоставили эффективный механизм выставления счетов, учитывающий различные сценарии, такие как скидки и возвраты средств. Благодаря комплексному подходу сервис был оснащен всем необходимым для управления подпиской, обеспечивая надежность и удобство.",
        ],
        image: getCovered,
      },
      {
        id: 3,
        text: [
          "Наша команда разработала сервис обработки подписок с нуля, уделяя особое внимание надежности функционирования системы. В рамках этого процесса нам также было необходимо осуществить переход с Thrift к gRPC.",

          "Мы выбрали gRPC за его хорошую производительность и универсальность, так как он позволяет приложениям открыто взаимодействовать в различных средах. Внедрение gRPC упростило работу сервисов, сделав их более быстрыми и надежными.",

          "Несмотря на сложности при осуществлении перехода, наша команда тщательно спланировала и протестировала каждый этап, обеспечив минимальную вероятность сбоев в работе сервисов. Во время этого процесса, мы также решили создать библиотеки функций для упрощения межсервисного взаимодействия.",
        ],
        image: notes,
      },
    ],
  },

  results_title: "Результаты",
  results_info: {
    list: {
      list_title:
        "Внедрение разработанного сервиса привело к значительным улучшениям в бизнес-операциях клиента:",
      list_items: [
        {
          mark: "Расширенное управление подпиской: ",
          text: "Гибкая система обработки подписок теперь позволяет компании работать с широким спектром тарифных планов, удовлетворяя разнообразные потребности своих конечных пользователей.",
          id: 1,
        },
        {
          mark: "Улучшенная коммуникация между микросервисами: ",
          text: "Переход с Thrift на gRPC был выполнен плавно, что улучшило взаимодействие между микросервисами и повысило общую эффективность системы.",
          id: 2,
        },
        {
          mark: "Соответствие обновленным требованиям: ",
          text: "Система адаптируется к меняющимся правовым условиям в разных штатах. Это помогает клиенту соблюдать новые требования и тем самым укрепляет доверие клиентов и репутацию.",
          id: 3,
        },
        {
          mark: "Улучшенное взаимодействие: ",
          text: "Создание библиотек функций облегчило взаимодействие между службами и способствовало повышению общей эффективности процесса.",
          id: 4,
        },
        {
          mark: "Улучшенные возможности тестирования: ",
          text: "Инструменты пользовательского интерфейса, разработанные для администраторов, способствовали эффективному тестированию сервисов, тем самым ускорили цикл разработки продукта.",
          id: 5,
        },
      ],
    },
    summary:
      "Благодаря этим улучшениям мы помогли заказчику не только достичь целей проекта, но и повысить уровень качества услуг и удовлетворенности клиентов.",
  },
  results_cubes: [
    {
      title: "7%",
      subtitle: "повышение производительности",
    },
    {
      title: "23%",
      subtitle: "увеличение базы пользователей",
    },
    {
      title: "19%",
      subtitle: "увеличение количества подписок",
    },
  ],

  team_title: "Команда",
  team_info: [
    { id: 1, teamName: "Backend-разработчиков", teamCount: 5 },
    { id: 2, teamName: "Fullstack-разработчика", teamCount: 2 },
    { id: 3, teamName: "Go-разработчик", teamCount: 1 },
    { id: 4, teamName: "Тимлид", teamCount: 1 },
  ],

  stack_title: "Технологии",

  stack_info: {
    backend: [
      "Python",
      "Go",
      "Flask",
      "Marshmallow",
      "Phabricator",
      "Arcanist",
      "Pandas",
      "gRPC",
    ],
    frontend: ["React", "HTML", "CSS"],
    платформы: ["Docker", "GCP"],
  },
};
